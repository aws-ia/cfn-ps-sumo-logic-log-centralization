AWSTemplateFormatVersion: "2010-09-09"
Transform: "AWS::Serverless-2016-10-31"
Description: "Template to setup the AWS Config app with AWS and Sumo Logic resources for AWS Quick Start Solution. (qs-1ut5k8ns6)"

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: "Sumo Logic Access Configuration (Required)"
        Parameters:
          - SumoDeployment
          - SumoAccessID
          - SumoAccessKey
          - SumoOrganizationId
          - RemoveSumoResourcesOnDeleteStack
          - SumoAccountID

      - Label:
          default: "App Details - Collector Configuration"
        Parameters:
          - InstallApp
          - CollectorName

      - Label:
          default: "App Details - AWS Config Details"
        Parameters:
          - CreateS3Bucket          
          - BucketName
      - Label:
          default: "App Details - HTTP Logs Source Configuration"
        Parameters:
          - CreateSNSTopic
          - CreateS3LogsSource
          - S3BucketLogsPathExpression
          - S3LogsSourceName
          - S3LogsSourceCategoryName

      - Label:
          default: "AWS Quick Start configuration"
        Parameters:
          - QSS3BucketName
          - QSS3KeyPrefix

      - Label:
          default: "Local Parameters. Do Not Edit the values."
        Parameters:
          - ParentStackName

    ParameterLabels:
      SumoDeployment:
        default: "Sumo Logic Deployment Name"
      SumoAccessID:
        default: "Sumo Logic Access ID"
      SumoAccessKey:
        default: "Sumo Logic Access Key"
      SumoOrganizationId:
        default: "Sumo Logic Organization Id"        
      SumoAccountID:
        default: "Sumo Logic AWS Account ID"        
      RemoveSumoResourcesOnDeleteStack:
        default: "Delete Sumo Logic Resources when stack is deleted"

      InstallApp:
        default: "Install Sumo Logic App"
      CollectorName:
        default: "Collector Name"

      BucketName:
        default: "AWS S3 Bucket Name"
      CreateS3Bucket:
        default: "Create AWS S3 Bucket"
      CreateSNSTopic:
        default: "Create SNS Topic for logs delivery"
      CreateS3LogsSource:
        default: "Create Sumo Logic Amazon S3 Logs Source"
      S3BucketLogsPathExpression:
        default: "Path Expression for the logs"        
      S3LogsSourceName:
        default: "Sumo Logic Amazon S3 Logs Source Name"
      S3LogsSourceCategoryName:
        default: "Sumo Logic Amazon S3 Logs Source Category Name"

      QSS3BucketName:
        default: "Quick Start S3 bucket name"

      QSS3KeyPrefix:
        default: "Quick Start S3 key prefix"

      ParentStackName:
        default: "If Any, Name of parent Stack"

Parameters:
  SumoDeployment:
    Type: String
    AllowedValues:
      - au
      - ca
      - de
      - eu
      - jp
      - us2
      - us1
      - in
      - fed
    Description: "Enter au, ca, de, eu, jp, us2, in, fed or us1."
    AllowedPattern: ".+"
  SumoAccessID:
    Type: String
    Description: "The Sumo Logic Access ID. Used for Sumo Logic API calls."
    AllowedPattern: ".+"
    ConstraintDescription: "Sumo Logic Access ID can not be empty."
  SumoAccessKey:
    Type: String
    Description: "The Sumo Logic Access Key. Used for Sumo Logic API calls."
    AllowedPattern: ".+"
    ConstraintDescription: "Sumo Logic Access Key can not be empty."
    NoEcho: true
  RemoveSumoResourcesOnDeleteStack:
    AllowedValues:
      - true
      - false
    Default: false
    Description:
      "To delete collector, sources and app when stack is deleted, set this parameter to true. Default is false.
      Deletes the resources created by the stack. Deletion of updated resources will be skipped."
    Type: String
  SumoOrganizationId:
    Description: "The Account Overview page displays information about your Sumo Logic organization. Used for IAM Role in Sumo Logic AWS Sources."
    Type: String
    AllowedPattern: ".+"
    ConstraintDescription: "Sumo Logic Organization Id can not be empty."    
  SumoAccountID:
    Type: String
    Description: "Account belonging to Sumo Logic used for ingestion of logs from customers"
    AllowedPattern: ".+"
    ConstraintDescription: "Sumo Logic AWS Account ID can not be empty."
    Default: "926226587429"

  InstallApp:
    Type: String
    Description:
      "Yes -> To Install App in Sumo Logic for AWS Quick Start Solution.
      No -> Skip Installation of the app."
    Default: "Yes"
    AllowedValues:
      - "Yes"
      - "No"
  CollectorName:
    Type: String
    Description: Change the collector name to be created else default name will be used.
    Default: AWS-Config-Collector

  CreateSNSTopic:
    Type: String
    Description:
      "Choose Yes to create SNS Topic and attach the SNS topic to AWS Config setting to deliver the logs.
      Choose No if config logs are already delivered to an existing SNS topic."
    Default: "Yes"
    AllowedValues:
      - "Yes"
      - "No"
  BucketName:
    Type: String
    Description: "Provide a bucket name to receive configuration history and configuration snapshot files."
    Default: ""
  CreateS3Bucket:
    Type: String
    Description:
      "Yes - Create a new bucket in AWS S3"
    Default: "Yes"
    AllowedValues:
      - "Yes"
      - "No"

  CreateS3LogsSource:
    Type: String
    Description:
      "Yes - to create Sumo Logic Amazon S3 Logs Source with provided bucket Name.
      No - to skip creation of the Sumo Logic Amazon S3 Log Source."
    Default: "Yes"
    AllowedValues:
      - "Yes"
      - "No"

  S3BucketLogsPathExpression:
    Type: String
    Description: Path expression to match one or more S3 objects. For example, ABC*.log or ABC.log
    Default: "AWSLogs/*/Config/*/*"

  S3LogsSourceName:
    Type: String
    Description: Change the Sumo Logic Amazon S3 Logs Source name to be created else default name will be used.
    Default: AWS-Config-Source

  S3LogsSourceCategoryName:
    Type: String
    Description:
      "Existing - Change to an existing Source Category from Sumo Logic if Amazon S3 Source is not created.
      New - Default will be used if Amazon S3 Source is Created."
    Default: AWS/config/logs

  QSS3BucketName:
    AllowedPattern: "^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$"
    ConstraintDescription: "Quick Start bucket name can include numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-)."
    Default: "aws-ia"
    Description: "S3 bucket name for the Quick Start assets. This string can include numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-)."
    Type: "String"

  QSS3KeyPrefix:
    AllowedPattern: "^[0-9a-zA-Z-/]*$"
    ConstraintDescription: "Quick Start key prefix can include numbers, lowercase letters, uppercase letters, hyphens (-), and forward slash (/)."
    Default: "cfn-ps-sumo-logic-log-centralization/"
    Description: "S3 key prefix for the Quick Start assets. Quick Start key prefix can include numbers, lowercase letters, uppercase letters, hyphens (-), and forward slash (/)."
    Type: "String"


  ParentStackName:
    Type: String
    Default: "ParentStackName"
    Description: Parent Stack Name. Do Not Edit the value.

Conditions:
  do_not_use_parent_stack: !Equals [!Ref ParentStackName, "ParentStackName"]
  UsingDefaultBucket: !Or 
    - !Equals [!Ref QSS3BucketName, 'aws-ia']
    - !Equals [!Ref QSS3BucketName, 'sumologic-aws-security-solutions']
    - !Equals [!Ref QSS3BucketName, 'tcat-cfn-ps-sumo-logic-cloudsiem']

  install_app: !Equals [!Ref InstallApp, "Yes"]
  install_s3_logs_source: !Equals [!Ref CreateS3LogsSource, "Yes"]
  create_sns_topic: !Equals [!Ref CreateSNSTopic, "Yes"]
  create_target_s3_bucket: !Or
    - !Equals [!Ref CreateS3Bucket, "Yes"]
    - !Condition do_not_use_parent_stack
  create_validation_logs_s3_bucket: !And
    - !Condition do_not_use_parent_stack
    - !Equals [!Ref CreateS3Bucket, "No"]
    - !Equals [!Ref CreateS3LogsSource, "Yes"]
  config_validation_path_expression: !And
    - !Condition do_not_use_parent_stack
    - !Equals [!Ref CreateS3LogsSource, "Yes"]  

Resources:
  SumoLogicHelperRole:
    Type: AWS::IAM::Role
    Condition: do_not_use_parent_stack
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Path: /
      Policies:
        - PolicyName: SumoPolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                  - config:DescribeDeliveryChannels
                  - config:DeleteDeliveryChannel
                Resource:
                  - !Sub "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:*"
                  - !Sub "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:*:log-stream:*"
                  - !Sub "arn:${AWS::Partition}:config:${AWS::Region}:${AWS::AccountId}:*"

              - Effect: Allow
                Action:
                  - config:PutDeliveryChannel
                Resource: '*'
  SumoLogicHelperFunction:
    Type: "AWS::Serverless::Function"
    Condition: do_not_use_parent_stack
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: W89
            reason: Lambda functions should be deployed inside a VPC    
      cfn-lint:
        config:
          ignore_checks:
            - E3030 # Valid value for Runtime (python3.11)
    Properties:
      Handler: main.handler
      Runtime: python3.11
      CodeUri:
        Bucket: !Sub
          - "${S3Bucket}"
          - S3Bucket:
              !If [
                UsingDefaultBucket,
                !Sub "${QSS3BucketName}-${AWS::Region}",
                !Ref QSS3BucketName,
              ]
        Key: !Sub "${QSS3KeyPrefix}templates/apps/sumo-aws-apps/sumologic-app-utils/sumo_app_utils.zip"
      MemorySize: 128
      Timeout: 900
      DeadLetterQueue:
        TargetArn: !Ref AWS::NoValue
        Type: SQS
      ReservedConcurrentExecutions: !Ref AWS::NoValue
      VpcConfig:
        SecurityGroupIds:
          - !Ref AWS::NoValue
        SubnetIds:
          - !Ref AWS::NoValue
      Role:
        Fn::GetAtt:
          - SumoLogicHelperRole
          - Arn

  ValidationLogsS3BucketBucket:
    Condition: create_validation_logs_s3_bucket
    Type: Custom::AWSValidation
    Properties:
      ServiceToken: !GetAtt SumoLogicHelperFunction.Arn
      PARAMETER_NAME: "BucketName"
      PARAMETER_VALUE: !Ref BucketName
      PARAMETER_ALLOWED_PATTERN: '(?!(^xn--|.+-s3alias$))^[a-z0-9][a-z0-9-]{1,61}[a-z0-9]$'

  ValidationConfigPathExpression:
    Condition: config_validation_path_expression
    Type: Custom::AWSValidation
    Properties:
      ServiceToken: !GetAtt SumoLogicHelperFunction.Arn
      PARAMETER_NAME: "Config bucket path expression (S3BucketLogsPathExpression)"
      PARAMETER_VALUE: !Ref S3BucketLogsPathExpression
      PARAMETER_ALLOWED_PATTERN: '.+'

  SumoRole:
    Type: AWS::IAM::Role
    Condition: do_not_use_parent_stack
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              AWS: !Sub arn:aws:iam::${SumoAccountID}:root
            Action: sts:AssumeRole
            Condition:
              StringEquals:
                sts:ExternalId: !Sub "${SumoDeployment}:${SumoOrganizationId}"
      Path: "/"
      Policies:
        - PolicyName: SumoPolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:GetObjectVersion
                  - s3:ListBucketVersions
                  - s3:ListBucket
                Resource:
                  - !Sub "arn:${AWS::Partition}:s3:::${BucketName}"
                  - !Sub "arn:${AWS::Partition}:s3:::${BucketName}/*"

  ConfigRole:
    Type: AWS::IAM::Role
    Condition: install_s3_logs_source
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: [config.amazonaws.com]
            Action: ["sts:AssumeRole"]
      ManagedPolicyArns:
        [
          !Sub "arn:${AWS::Partition}:iam::aws:policy/service-role/AWS_ConfigRole",
        ]
      Policies:
        - PolicyName: root
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action: s3:GetBucketAcl
                Resource:
                  !Join [
                    "",
                    ["arn:", !Ref AWS::Partition, ":s3:::", !Ref BucketName],
                  ]
              - Effect: Allow
                Action: s3:PutObject
                Resource:
                  !Join [
                    "",
                    [
                      "arn:",
                      !Ref AWS::Partition,
                      ":s3:::",
                      !Ref BucketName,
                      /AWSLogs/,
                      !Ref "AWS::AccountId",
                      /*,
                    ],
                  ]
                Condition:
                  StringEquals:
                    s3:x-amz-acl: bucket-owner-full-control
              - Effect: Allow
                Action: config:PutDeliveryChannel
                Resource: !Sub "arn:${AWS::Partition}:config:${AWS::Region}:${AWS::AccountId}:*"               
              - Effect: Allow
                Action: iam:PassRole
                Resource: !Sub 'arn:${AWS::Partition}:iam::${AWS::AccountId}:role/*'
                Condition:
                  StringEqualsIfExists:
                    iam:PassedToService:
                      - config.amazonaws.com
  TargetS3Bucket:
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: W51
            reason: S3 bucket should likely have a bucket policy
          - id: W41
            reason: S3 Bucket should have encryption option set  
    Type: AWS::S3::Bucket
    Condition: create_target_s3_bucket
    Properties:
      BucketName: !Ref BucketName
      NotificationConfiguration:
        TopicConfigurations:
          - Event: s3:ObjectCreated:Put
            Topic: !If
                - create_sns_topic
                - !Ref SumoSNSTopic        
                - !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:SumoSNSTopic-${ParentStackName}"
      PublicAccessBlockConfiguration:
        BlockPublicAcls: True
        BlockPublicPolicy: True
        IgnorePublicAcls: True
        RestrictPublicBuckets: True
      VersioningConfiguration:
        Status: Enabled
      LoggingConfiguration:
        DestinationBucketName: !Ref AWS::NoValue
        LogFilePrefix: !Ref AWS::NoValue
    DeletionPolicy: Retain
    UpdateReplacePolicy: Retain

  SumoS3BucketExportPolicy:
    Condition: create_target_s3_bucket
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref BucketName
      PolicyDocument:
        Statement:
          - Sid: AWSBucketPermissionsAclCheck
            Effect: Allow
            Principal:
              Service: config.amazonaws.com
            Action: s3:GetBucketAcl
            Resource:
              - !Sub "arn:${AWS::Partition}:s3:::${BucketName}"
          - Sid: AWSBucketExistenceCheck
            Effect: Allow
            Principal:
              Service: config.amazonaws.com
            Action: s3:ListBucket
            Resource:
              - !Sub "arn:${AWS::Partition}:s3:::${BucketName}"
          - Sid: AWSLogDeliveryWrite
            Effect: Allow
            Principal:
              Service: config.amazonaws.com
            Action: s3:PutObject
            Resource:
              - !Sub "arn:${AWS::Partition}:s3:::${BucketName}/*"
            Condition:
              StringEquals:
                s3:x-amz-acl: bucket-owner-full-control
          - Sid: AWSLogDeliveryAclCheck
            Effect: Allow
            Principal:
              Service: delivery.logs.amazonaws.com
            Action: s3:GetBucketAcl
            Resource:
              - !Sub "arn:${AWS::Partition}:s3:::${BucketName}"
    DependsOn:
      - TargetS3Bucket

  SumoSNSTopic:
    Type: "AWS::SNS::Topic"
    Condition: create_sns_topic
    Properties:
      KmsMasterKeyId: !Ref AWS::NoValue
      TopicName: !Sub "SumoSNSTopic-${AWS::StackName}"

  ConfigTopicPolicy:
    Type: AWS::SNS::TopicPolicy
    Condition: create_sns_topic
    Properties:
      PolicyDocument:
        Id: ConfigTopicPolicy
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: config.amazonaws.com
            Action: SNS:Publish
            Resource: !Sub "arn:${AWS::Partition}:sns:${AWS::Region}:${AWS::AccountId}:*"
      Topics: [!Ref "SumoSNSTopic"]

  SumoCustomAWSConfig:
    Type: "Custom::AWSConfig"
    Condition: install_s3_logs_source
    Properties:
      ServiceToken: !If
        - do_not_use_parent_stack
        - !GetAtt
          - SumoLogicHelperFunction
          - Arn
        - !ImportValue
          "Fn::Sub": "${ParentStackName}-SumoLogicHelperFunctionARN"
      NAME_CONFIG_RECORDER: "default"
      CONFIG_RECORDER_ROLEARN: !GetAtt ConfigRole.Arn
      DELIVERY_CHANNEL_FREQUENCY: Six_Hours
      DELIVERY_CHANNEL_S3_BUCKET_NAME: !Ref BucketName
      AWS_REGION: !Ref AWS::Region
      REMOVE_RESOURCES_ON_DELETES_TACK: !Ref RemoveSumoResourcesOnDeleteStack

  SumoSNSSubscription:
    Type: "AWS::SNS::Subscription"
    Condition: install_s3_logs_source
    Properties:
      TopicArn: !If
        - create_sns_topic
        - !Ref SumoSNSTopic        
        - !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:SumoSNSTopic-${ParentStackName}"
      Endpoint: !GetAtt SumoS3Source.SUMO_ENDPOINT
      Protocol: https
      DeliveryPolicy:
        healthyRetryPolicy:
          numRetries: 40
          minDelayTarget: 10
          maxDelayTarget: 300
          numMinDelayRetries: 3
          numMaxDelayRetries: 5
          numNoDelayRetries: 0
          backoffFunction: exponential

  SumoHostedCollector:
    Type: Custom::Collector
    Condition: install_s3_logs_source
    Properties:
      ServiceToken: !If
        - do_not_use_parent_stack
        - !GetAtt
          - SumoLogicHelperFunction
          - Arn
        - !ImportValue
          "Fn::Sub": "${ParentStackName}-SumoLogicHelperFunctionARN"
      Region: !Ref "AWS::Region"
      CollectorType: Hosted
      RemoveOnDeleteStack:
        !If [
          do_not_use_parent_stack,
          !Ref RemoveSumoResourcesOnDeleteStack,
          false,
        ]
      CollectorName: !Ref CollectorName
      SumoAccessID: !Ref SumoAccessID
      SumoAccessKey: !Ref SumoAccessKey
      SumoDeployment: !Ref SumoDeployment


  SumoS3Source:
    Type: Custom::AWSSource
    Condition: install_s3_logs_source
    Properties:
      ServiceToken: !If
        - do_not_use_parent_stack
        - !GetAtt
          - SumoLogicHelperFunction
          - Arn
        - !ImportValue
          "Fn::Sub": "${ParentStackName}-SumoLogicHelperFunctionARN"
      SourceType: AwsS3Bucket
      Region: !Ref "AWS::Region"
      SourceName: !Ref S3LogsSourceName
      RemoveOnDeleteStack: !Ref RemoveSumoResourcesOnDeleteStack
      SourceCategory: !Ref S3LogsSourceCategoryName
      CollectorId: !GetAtt SumoHostedCollector.COLLECTOR_ID
      SumoAccessID: !Ref SumoAccessID
      SumoAccessKey: !Ref SumoAccessKey
      SumoDeployment: !Ref SumoDeployment
      TargetBucketName: !Ref BucketName
      PathExpression: !Ref S3BucketLogsPathExpression
      RoleArn: !If
        - do_not_use_parent_stack
        - !GetAtt
          - SumoRole
          - Arn
        - !ImportValue
          "Fn::Sub": "${ParentStackName}-SumoSourceRoleARN"

  sumoApp:
    Type: Custom::App
    Condition: install_app
    Properties:
      ServiceToken: !If
        - do_not_use_parent_stack
        - !GetAtt
          - SumoLogicHelperFunction
          - Arn
        - !ImportValue
          "Fn::Sub": "${ParentStackName}-SumoLogicHelperFunctionARN"
      Region: !Ref "AWS::Region"
      AppName: "Amazon QuickStart - AWS Config"
      AppId: "61be4a8f-6702-4035-bc55-e56d149b181d"
      RemoveOnDeleteStack: !Ref RemoveSumoResourcesOnDeleteStack
      AppSources:
        paramId123: !Sub "_sourceCategory=${S3LogsSourceCategoryName}"
      SumoAccessID: !Ref SumoAccessID
      SumoAccessKey: !Ref SumoAccessKey
      SumoDeployment: !Ref SumoDeployment
      
Outputs:
  QSS3BucketName:
    Description: Quick Start S3 bucket name
    Value: !Ref QSS3BucketName      
